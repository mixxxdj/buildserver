
Changes in Rubber Band v1.8.2

 * Fix a number of small memory leaks
 * Make stretcher more robust to being fed invalid input (with NaNs)
 * Include iOS build file
 * Various platform build fixes and improvements

The API is unchanged and the library is binary compatible with
version 1.7.


Changes in Rubber Band v1.8.1

 * Fix a crash in formant-preserving pitch shift for some build targets

The API is unchanged and the library is binary compatible with
version 1.7.


Changes in Rubber Band v1.8

 * Add build support for Win32/MSVC, Android, and various libraries
 * Add Java JNI interface

The API is unchanged and the library is binary compatible with
version 1.7.


Changes in Rubber Band v1.7

 * Add the centre-focus option as an alternative processing mode for
   stereo (using mid-side arrangement)
 * Several bug fixes

The library is binary compatible with version 1.6 for forward
compatibility (values have been added to an existing enum).  Code
written to use 1.7 is not necessarily compatible with 1.6.


Changes in Rubber Band v1.6

 * Add Smoothing option.  This uses a window-presum FFT, introducing
   time-domain aliasing which is then smoothed using a sinc window.
   This can be used in combination with any of the existing processing
   control options.  This will soften transients but the result may
   still be more pleasant for some material that is not very amenable
   to being time stretched.
 * Fix silent channel of output when processing with band-limited
   transients option
 * Include libresample support

The library is binary compatible with version 1.5 for forward
compatibility (values have been added to an existing enum).  Code
written to use 1.6 is not necessarily compatible with 1.5.


Changes in Rubber Band v1.5

 * Add a more reliable transient detection mode, and make the mode
   selectable using OptionDetectorXXX flags -- the new method is
   the default
 * Band-limit transient detectors to avoid being distracted by
   inaudible garbage
 * Add a key-frame mapping facility for variable stretch ratio
   management during offline stretches

The library is binary compatible with version 1.4 for forward
compatibility (a function has been added and an enum changed, but no
existing entry points have changed).  Code written to use 1.5 is not
necessarily compatible with 1.4.


Changes in Rubber Band v1.4 

 * Fix a hang when faced with some very peculiar stretch factors
 * Fix some incorrect threading condition usage
 * Some code rearrangement
 * Fix build on Solaris

The library is binary compatible with version 1.3.


Changes in Rubber Band v1.3

 * Fix a bug that may cause incorrect output during the first process
   block of some audio files, when processing in offline mode
 * Fix a small number of build issues and more minor bugs

The library is binary compatible with version 1.2.


Changes in Rubber Band v1.2

 * Add an initial "formant preservation" option when pitch shifting
 * Real-time pitch shifting now uses a faster method by default, with
   less variation in CPU usage
 * The code is more amenable to compiler auto-vectorization (through
   e.g. gcc --ftree-vectorize).

